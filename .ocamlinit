open Unfoldings
open Occurrence_net
open Product
open Examples
open Prod1
open Prod2
open Prod3
open Prod4
open Prod5
open Prod6
open Prod7
open Prod8;;

open Ltl
open String_product
open String_ltl
open StringLtl

let f = F (And (AP "u1", X (AP "u1")))
let ap = APSet.of_list [ "u1"; "t1" ]
let gnba = gnba_of_formula ap f;;

open String_product
open String_ltl
open StringPTNetProduct
open StringNetfullsync
open TesterLtl

let f = F (And (AP "u1", X (AP "u1")))
let gnba = StringNetfullsync.gnba_of_formula prod7 f;;

open StringProductUnfolder;;

let r = test Prod7.prod7 (d_compare sl_compare) [] 50;;
Plot.plot_test_result r ();;

let u' = StringProductUnfolder.Unfolder.OccurrenceNet.reversible r.prefix;;

Plot.plot_unfold u' ();;

open UnfoldTester.TesterLtl;;
open UnfoldTester.TesterLtl.Formula;;

let pippo = {StringProductUnfolder.Unfolder.OccurrenceNet.Token.name= 0; history = []; label = "t1"};;
let t2 = {StringProductUnfolder.Unfolder.OccurrenceNet.Token.name
   = 4;
  history =
   [[Unfoldings.String_product.StringPTNetProduct.T "c";
     Unfoldings.String_product.StringPTNetProduct.Idle]];
  label = "t2"};;
let f = F (And (AP t2, F (X (AP pippo))));;
let gnba = UnfoldTester.gnba_of_formula u' f;;
